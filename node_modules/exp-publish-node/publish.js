var fs = require("fs-extra");
var child_process = require('child_process');

var package_json_path = "./package.json";
var package_json_tmp_path = "./_package.json.original";

fs.copySync(package_json_path, package_json_tmp_path, {"clobber": true});

var pkg_bytes = fs.readFileSync(package_json_path);
var pkg_json = pkg_bytes.toString("utf-8");
var pkg = JSON.parse(pkg_json);

if(pkg.private) {
   pkg.private = false;
} else {
   console.warn("Your module is not defaulted to private.  Please ensure that is what you intended.");
}

var number = process.env.bamboo_buildNumber;
var branch = process.env.bamboo_repository_branch_name;
var commit = process.env.bamboo_repository_revision_number;

if(!number || !branch || !commit) {
	console.log("We are missing important environment variables from bamboo:");
	console.log("\tbamboo_buildNumber:                " + JSON.stringify(number));
	console.log("\tbamboo_repository_branch_name:     " + JSON.stringify(branch));
	console.log("\tbamboo_repository_revision_number: " + JSON.stringify(commit));
	process.exit(1);
}

commit = commit.substr(0, 8);

var ver_re = /^\d+\.\d+\.\d+$/;
if(!pkg.version.match(ver_re)) {
   console.warn("Sorry, only MAJOR.MINOR.PATCH formatted versions are supported in your package.json (You have: " + JSON.stringify(pkg.version) + ")");
   process.exit(1);
}

if(branch == "master") {
   pkg.version = pkg.version + "-" + number + "+" + commit;
} else {
   pkg.version = "0.0.0" + "-" + number + "+" + commit;
}

fs.writeFileSync(package_json_path, JSON.stringify(pkg, null, "\t"));

var publish_args = [
	"npm",
	"publish",
	"--cache",
	"/var/cache/bamboo_npm/" + process.env.bamboo_planKey,
	"--userconfig",
	process.env.HOME + "/.npmrc_publish"
];

if(process.env.bamboo_repository_branch_name != "master") {
	publish_args.push("--tag", process.env.bamboo_repository_branch_name);
}

var publish = publish_args.join(" ");
console.log(publish);
console.log(String(child_process.execSync(publish)));

fs.copySync(package_json_tmp_path, package_json_path, {"clobber": true});
fs.remove(package_json_tmp_path);

